// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: subscription/v1/subscription.proto

package subscription_v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Subscription struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	UserId         string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ServiceName    string                 `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Price          int64                  `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	StartDate      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	mi := &file_subscription_v1_subscription_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_v1_subscription_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_subscription_v1_subscription_proto_rawDescGZIP(), []int{0}
}

func (x *Subscription) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *Subscription) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Subscription) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Subscription) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Subscription) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Subscription) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type CreateSubscriptionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ServiceName   string                 `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Price         int64                  `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSubscriptionRequest) Reset() {
	*x = CreateSubscriptionRequest{}
	mi := &file_subscription_v1_subscription_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriptionRequest) ProtoMessage() {}

func (x *CreateSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_v1_subscription_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*CreateSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_subscription_v1_subscription_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSubscriptionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateSubscriptionRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *CreateSubscriptionRequest) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateSubscriptionRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *CreateSubscriptionRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type CreateSubscriptionResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateSubscriptionResponse) Reset() {
	*x = CreateSubscriptionResponse{}
	mi := &file_subscription_v1_subscription_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriptionResponse) ProtoMessage() {}

func (x *CreateSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_v1_subscription_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*CreateSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_subscription_v1_subscription_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSubscriptionResponse) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type GetSubscriptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubscriptionsRequest) Reset() {
	*x = GetSubscriptionsRequest{}
	mi := &file_subscription_v1_subscription_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionsRequest) ProtoMessage() {}

func (x *GetSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_v1_subscription_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_subscription_v1_subscription_proto_rawDescGZIP(), []int{3}
}

func (x *GetSubscriptionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetSubscriptionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Subscriptions []*Subscription        `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubscriptionsResponse) Reset() {
	*x = GetSubscriptionsResponse{}
	mi := &file_subscription_v1_subscription_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionsResponse) ProtoMessage() {}

func (x *GetSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_v1_subscription_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_subscription_v1_subscription_proto_rawDescGZIP(), []int{4}
}

func (x *GetSubscriptionsResponse) GetSubscriptions() []*Subscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

type UpdateSubscriptionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	UserId         string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ServiceName    string                 `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Price          int64                  `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	StartDate      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateSubscriptionRequest) Reset() {
	*x = UpdateSubscriptionRequest{}
	mi := &file_subscription_v1_subscription_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionRequest) ProtoMessage() {}

func (x *UpdateSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_v1_subscription_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_subscription_v1_subscription_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateSubscriptionRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *UpdateSubscriptionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateSubscriptionRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *UpdateSubscriptionRequest) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpdateSubscriptionRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *UpdateSubscriptionRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type DeleteSubscriptionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteSubscriptionRequest) Reset() {
	*x = DeleteSubscriptionRequest{}
	mi := &file_subscription_v1_subscription_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubscriptionRequest) ProtoMessage() {}

func (x *DeleteSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_v1_subscription_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*DeleteSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_subscription_v1_subscription_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteSubscriptionRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type GetTotalCostSubscriptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	UserIds       []string               `protobuf:"bytes,3,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	ServiceNames  []string               `protobuf:"bytes,4,rep,name=service_names,json=serviceNames,proto3" json:"service_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTotalCostSubscriptionsRequest) Reset() {
	*x = GetTotalCostSubscriptionsRequest{}
	mi := &file_subscription_v1_subscription_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTotalCostSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalCostSubscriptionsRequest) ProtoMessage() {}

func (x *GetTotalCostSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_v1_subscription_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalCostSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*GetTotalCostSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_subscription_v1_subscription_proto_rawDescGZIP(), []int{7}
}

func (x *GetTotalCostSubscriptionsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetTotalCostSubscriptionsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetTotalCostSubscriptionsRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *GetTotalCostSubscriptionsRequest) GetServiceNames() []string {
	if x != nil {
		return x.ServiceNames
	}
	return nil
}

type GetTotalCostSubscriptionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalCost     int64                  `protobuf:"varint,1,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTotalCostSubscriptionsResponse) Reset() {
	*x = GetTotalCostSubscriptionsResponse{}
	mi := &file_subscription_v1_subscription_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTotalCostSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalCostSubscriptionsResponse) ProtoMessage() {}

func (x *GetTotalCostSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_v1_subscription_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalCostSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*GetTotalCostSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_subscription_v1_subscription_proto_rawDescGZIP(), []int{8}
}

func (x *GetTotalCostSubscriptionsResponse) GetTotalCost() int64 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

type GetListSubscriptionsResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionsList []*Subscription        `protobuf:"bytes,1,rep,name=subscriptions_list,json=subscriptionsList,proto3" json:"subscriptions_list,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetListSubscriptionsResponse) Reset() {
	*x = GetListSubscriptionsResponse{}
	mi := &file_subscription_v1_subscription_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListSubscriptionsResponse) ProtoMessage() {}

func (x *GetListSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_subscription_v1_subscription_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*GetListSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_subscription_v1_subscription_proto_rawDescGZIP(), []int{9}
}

func (x *GetListSubscriptionsResponse) GetSubscriptionsList() []*Subscription {
	if x != nil {
		return x.SubscriptionsList
	}
	return nil
}

var File_subscription_v1_subscription_proto protoreflect.FileDescriptor

const file_subscription_v1_subscription_proto_rawDesc = "" +
	"\n" +
	"\"subscription/v1/subscription.proto\x12\x0fsubscription_v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x17validate/validate.proto\x1a\x1cgoogle/api/annotations.proto\"\x8e\x02\n" +
	"\fSubscription\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12*\n" +
	"\fservice_name\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vserviceName\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x03R\x05price\x12C\n" +
	"\n" +
	"start_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\b\xfaB\x05\xb2\x01\x02\b\x01R\tstartDate\x125\n" +
	"\bend_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\"\xf2\x01\n" +
	"\x19CreateSubscriptionRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12*\n" +
	"\fservice_name\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\vserviceName\x12\x14\n" +
	"\x05price\x18\x03 \x01(\x03R\x05price\x12C\n" +
	"\n" +
	"start_date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB\b\xfaB\x05\xb2\x01\x02\b\x01R\tstartDate\x125\n" +
	"\bend_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\"O\n" +
	"\x1aCreateSubscriptionResponse\x121\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tB\b\xfaB\x05r\x03\xb0\x01\x01R\x0esubscriptionId\"<\n" +
	"\x17GetSubscriptionsRequest\x12!\n" +
	"\auser_id\x18\x01 \x01(\tB\b\xfaB\x05r\x03\xb0\x01\x01R\x06userId\"_\n" +
	"\x18GetSubscriptionsResponse\x12C\n" +
	"\rsubscriptions\x18\x01 \x03(\v2\x1d.subscription_v1.SubscriptionR\rsubscriptions\"\x92\x02\n" +
	"\x19UpdateSubscriptionRequest\x121\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tB\b\xfaB\x05r\x03\xb0\x01\x01R\x0esubscriptionId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12!\n" +
	"\fservice_name\x18\x03 \x01(\tR\vserviceName\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x03R\x05price\x129\n" +
	"\n" +
	"start_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\"N\n" +
	"\x19DeleteSubscriptionRequest\x121\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tB\b\xfaB\x05r\x03\xb0\x01\x01R\x0esubscriptionId\"\xd4\x01\n" +
	" GetTotalCostSubscriptionsRequest\x129\n" +
	"\n" +
	"start_date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12\x19\n" +
	"\buser_ids\x18\x03 \x03(\tR\auserIds\x12#\n" +
	"\rservice_names\x18\x04 \x03(\tR\fserviceNames\"B\n" +
	"!GetTotalCostSubscriptionsResponse\x12\x1d\n" +
	"\n" +
	"total_cost\x18\x01 \x01(\x03R\ttotalCost\"l\n" +
	"\x1cGetListSubscriptionsResponse\x12L\n" +
	"\x12subscriptions_list\x18\x01 \x03(\v2\x1d.subscription_v1.SubscriptionR\x11subscriptionsList2\x82\a\n" +
	"\x13SubscriptionService\x12\x8f\x01\n" +
	"\x12CreateSubscription\x12*.subscription_v1.CreateSubscriptionRequest\x1a+.subscription_v1.CreateSubscriptionResponse\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/api/v1/subscriptions\x12\x90\x01\n" +
	"\x10GetSubscriptions\x12(.subscription_v1.GetSubscriptionsRequest\x1a).subscription_v1.GetSubscriptionsResponse\"'\x82\xd3\xe4\x93\x02!\x12\x1f/api/v1/subscriptions/{user_id}\x12\x8c\x01\n" +
	"\x12UpdateSubscription\x12*.subscription_v1.UpdateSubscriptionRequest\x1a\x16.google.protobuf.Empty\"2\x82\xd3\xe4\x93\x02,:\x01*2'/api/v1/subscriptions/{subscription_id}\x12\x89\x01\n" +
	"\x12DeleteSubscription\x12*.subscription_v1.DeleteSubscriptionRequest\x1a\x16.google.protobuf.Empty\"/\x82\xd3\xe4\x93\x02)*'/api/v1/subscriptions/{subscription_id}\x12\xac\x01\n" +
	"\x19GetTotalCostSubscriptions\x121.subscription_v1.GetTotalCostSubscriptionsRequest\x1a2.subscription_v1.GetTotalCostSubscriptionsResponse\"(\x82\xd3\xe4\x93\x02\"\x12 /api/v1/subscriptions/total-cost\x12|\n" +
	"\x14GetListSubscriptions\x12\x16.google.protobuf.Empty\x1a-.subscription_v1.GetListSubscriptionsResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v1/subscriptionsBgZehttps://github.com/A-mpol/effective-mobile-subscription-service/proto/subscription/v1;subscription_v1b\x06proto3"

var (
	file_subscription_v1_subscription_proto_rawDescOnce sync.Once
	file_subscription_v1_subscription_proto_rawDescData []byte
)

func file_subscription_v1_subscription_proto_rawDescGZIP() []byte {
	file_subscription_v1_subscription_proto_rawDescOnce.Do(func() {
		file_subscription_v1_subscription_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_subscription_v1_subscription_proto_rawDesc), len(file_subscription_v1_subscription_proto_rawDesc)))
	})
	return file_subscription_v1_subscription_proto_rawDescData
}

var file_subscription_v1_subscription_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_subscription_v1_subscription_proto_goTypes = []any{
	(*Subscription)(nil),                      // 0: subscription_v1.Subscription
	(*CreateSubscriptionRequest)(nil),         // 1: subscription_v1.CreateSubscriptionRequest
	(*CreateSubscriptionResponse)(nil),        // 2: subscription_v1.CreateSubscriptionResponse
	(*GetSubscriptionsRequest)(nil),           // 3: subscription_v1.GetSubscriptionsRequest
	(*GetSubscriptionsResponse)(nil),          // 4: subscription_v1.GetSubscriptionsResponse
	(*UpdateSubscriptionRequest)(nil),         // 5: subscription_v1.UpdateSubscriptionRequest
	(*DeleteSubscriptionRequest)(nil),         // 6: subscription_v1.DeleteSubscriptionRequest
	(*GetTotalCostSubscriptionsRequest)(nil),  // 7: subscription_v1.GetTotalCostSubscriptionsRequest
	(*GetTotalCostSubscriptionsResponse)(nil), // 8: subscription_v1.GetTotalCostSubscriptionsResponse
	(*GetListSubscriptionsResponse)(nil),      // 9: subscription_v1.GetListSubscriptionsResponse
	(*timestamppb.Timestamp)(nil),             // 10: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                     // 11: google.protobuf.Empty
}
var file_subscription_v1_subscription_proto_depIdxs = []int32{
	10, // 0: subscription_v1.Subscription.start_date:type_name -> google.protobuf.Timestamp
	10, // 1: subscription_v1.Subscription.end_date:type_name -> google.protobuf.Timestamp
	10, // 2: subscription_v1.CreateSubscriptionRequest.start_date:type_name -> google.protobuf.Timestamp
	10, // 3: subscription_v1.CreateSubscriptionRequest.end_date:type_name -> google.protobuf.Timestamp
	0,  // 4: subscription_v1.GetSubscriptionsResponse.subscriptions:type_name -> subscription_v1.Subscription
	10, // 5: subscription_v1.UpdateSubscriptionRequest.start_date:type_name -> google.protobuf.Timestamp
	10, // 6: subscription_v1.UpdateSubscriptionRequest.end_date:type_name -> google.protobuf.Timestamp
	10, // 7: subscription_v1.GetTotalCostSubscriptionsRequest.start_date:type_name -> google.protobuf.Timestamp
	10, // 8: subscription_v1.GetTotalCostSubscriptionsRequest.end_date:type_name -> google.protobuf.Timestamp
	0,  // 9: subscription_v1.GetListSubscriptionsResponse.subscriptions_list:type_name -> subscription_v1.Subscription
	1,  // 10: subscription_v1.SubscriptionService.CreateSubscription:input_type -> subscription_v1.CreateSubscriptionRequest
	3,  // 11: subscription_v1.SubscriptionService.GetSubscriptions:input_type -> subscription_v1.GetSubscriptionsRequest
	5,  // 12: subscription_v1.SubscriptionService.UpdateSubscription:input_type -> subscription_v1.UpdateSubscriptionRequest
	6,  // 13: subscription_v1.SubscriptionService.DeleteSubscription:input_type -> subscription_v1.DeleteSubscriptionRequest
	7,  // 14: subscription_v1.SubscriptionService.GetTotalCostSubscriptions:input_type -> subscription_v1.GetTotalCostSubscriptionsRequest
	11, // 15: subscription_v1.SubscriptionService.GetListSubscriptions:input_type -> google.protobuf.Empty
	2,  // 16: subscription_v1.SubscriptionService.CreateSubscription:output_type -> subscription_v1.CreateSubscriptionResponse
	4,  // 17: subscription_v1.SubscriptionService.GetSubscriptions:output_type -> subscription_v1.GetSubscriptionsResponse
	11, // 18: subscription_v1.SubscriptionService.UpdateSubscription:output_type -> google.protobuf.Empty
	11, // 19: subscription_v1.SubscriptionService.DeleteSubscription:output_type -> google.protobuf.Empty
	8,  // 20: subscription_v1.SubscriptionService.GetTotalCostSubscriptions:output_type -> subscription_v1.GetTotalCostSubscriptionsResponse
	9,  // 21: subscription_v1.SubscriptionService.GetListSubscriptions:output_type -> subscription_v1.GetListSubscriptionsResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_subscription_v1_subscription_proto_init() }
func file_subscription_v1_subscription_proto_init() {
	if File_subscription_v1_subscription_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_subscription_v1_subscription_proto_rawDesc), len(file_subscription_v1_subscription_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_subscription_v1_subscription_proto_goTypes,
		DependencyIndexes: file_subscription_v1_subscription_proto_depIdxs,
		MessageInfos:      file_subscription_v1_subscription_proto_msgTypes,
	}.Build()
	File_subscription_v1_subscription_proto = out.File
	file_subscription_v1_subscription_proto_goTypes = nil
	file_subscription_v1_subscription_proto_depIdxs = nil
}
